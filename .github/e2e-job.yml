test:
  needs: build
  runs-on: ubuntu-latest
  permissions:
    checks: write
    pull-requests: write

  services:
    postgres:
      image: postgres:latest
      env:
        POSTGRES_USER:  ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD:  ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB:  ${{ secrets.POSTGRES_DB }}
      ports:
        - 5432:5432
      options: >-
        --health-cmd="pg_isready -U postgres" 
        --health-interval=10s 
        --health-timeout=5s 
        --health-retries=3

  steps:
    - name: Checkout Code
      uses: actions/checkout@v4.1.1
      with:
        ref: ${{ github.event.pull_request.head.sha }} #Checkout pull request HEAD commit
        fetch-depth: 0 #Fetch all history for all tags and branches
    
    - run: git fetch origin master
    #- run: |
    #    git fetch --no-tags --depth=1 origin master
  # git checkout -b master
  # git checkout ${{ github.event.pull_request.head.sha }}

    - name: Set Up e2e Database
      run: |
        npm install -g pg
        PGPASSWORD="${{ secrets.POSTGRES_PASSWORD }}" psql -h localhost -U postgres -d test < test/sql/initial.sql

    - name: Install Dependencies
      run: npm ci

    - name: Show changed files
      run: |
        git diff origin/master...${{ github.event.pull_request.head.sha }}

    - name: Run Tests
      run: |
        if [ "$CONTEXT" = "changedSince" ]; then
          npm run test:e2e:changedSince
        else
          npm run test:e2e
        fi
      env:
        CONTEXT: ${{ github.event_name == 'pull_request' && github.event.pull_request.changed_files > 0 && 'changedSince' || 'other' }}

    - name: Process jest results with default
      if: always()
      uses: im-open/process-jest-test-results@v2.2.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        results-file: 'test/jest-results.json'
        create-status-check: true
        create-pr-comment: false
